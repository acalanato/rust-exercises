{"$message_type":"diagnostic","message":"invalid `struct` delimiters or `fn` call arguments","code":null,"level":"error","spans":[{"file_name":"src/main.rs","byte_start":742,"byte_end":756,"line_start":42,"line_end":42,"column_start":12,"column_end":26,"is_primary":true,"text":[{"text":"    return from(out: u64);","highlight_start":12,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if `from` is a struct, use braces as delimiters","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":746,"byte_end":747,"line_start":42,"line_end":42,"column_start":16,"column_end":17,"is_primary":true,"text":[{"text":"    return from(out: u64);","highlight_start":16,"highlight_end":17}],"label":null,"suggested_replacement":" { ","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":755,"byte_end":756,"line_start":42,"line_end":42,"column_start":25,"column_end":26,"is_primary":true,"text":[{"text":"    return from(out: u64);","highlight_start":25,"highlight_end":26}],"label":null,"suggested_replacement":" }","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if `from` is a function, use the arguments directly","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":747,"byte_end":752,"line_start":42,"line_end":42,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"    return from(out: u64);","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":"","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: invalid `struct` delimiters or `fn` call arguments\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:42:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m42\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    return from(out: u64);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if `from` is a struct, use braces as delimiters\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m42\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    return from\u001b[0m\u001b[0m\u001b[38;5;10m { \u001b[0m\u001b[0mout: u64\u001b[0m\u001b[0m\u001b[38;5;10m }\u001b[0m\u001b[0m;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[38;5;10m~\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[38;5;10m~\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if `from` is a function, use the arguments directly\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m42\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    return from(\u001b[0m\u001b[0m\u001b[38;5;9mout: \u001b[0m\u001b[0mu64);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m42\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    return from(u64);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 1 previous error","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 1 previous error\u001b[0m\n\n"}
